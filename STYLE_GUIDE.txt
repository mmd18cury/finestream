Don't use end lines, except between classes.
XXX
Don't skip first line with figure bracket, skip the last one. This brackets will work as end lines.{
	Don't avoid figure brackets in "for" cycle with no exceptions. And try to use them for all blocks even it's one line only to make it easier to add new instructions in future.
	For any type, concept, structure or class name use lower case, try to name them with one word, or with one word with 2-3 contractions, if not possible use_between words, but as rare as you can.
}
For any function, including methods use CamelCase(), don't add m_CamelCase() or strCamelCase();
For any variable use UPPER_CASE, you can use from 1 to 3 lower case characters to denote its type, for example: bool bBYTE, string strNUMBER. If it's a phraze and at least one full word in it without contraction use _, otherwise make it a single word.
In macros use the same rules, if it's macro for a type, use lwcs, if it's macro for a function use #define Macro(x, y) OriginalFunctionDoingThisAndThis(x, y), if it's macro for a variable or other identifier use UPCS.
If you comment your commentary make  // two spaces before slashes and one space after, if you are commenting code to disallow it don't use a space after it: //int a = 0;
Don't write two instructions on one line;
DoInstruction1();
do instruction = 2;
Avoid making several instructions out of one, use:
 int A, B, C;
and:
 int LONG_NAME1,
     LONG_NAME2,
     LONG_NAME3;
don't use:
 int a;
 int b;
 int c;
same about streams, use:
 cout << "123"
      << "456";
don't use:
 cout << "123";
 cout << "456";